---
- name: "Creates backend app directory"
  file:
    path: /home/ubuntu/backend
    state: directory

- name: "Copy compiled backend app"
  copy:
    src: dist.zip
    dest: /home/ubuntu/backend
# - name: "copy backend file"
#   become: true
#   copy:
#     src: ~/project/.circleci/project/backend/dist
#     dest: /home/ubuntu/backend
# - name: Start PM2
#   shell: |
#     cd /home/ubuntu/
#     tar xzvf backend.tar.gz
#     mv home/circleci/project/backend .
#     cd backend
#     sudo npm install -g npm@latest
#     sudo npm install -g webpack-dev-server
#     sudo npm install
#     sudo npm run build
#     sudo pm2 start npm --name backend -- start:prod


# - name: "Unzip backend files to correct directory"
  # shell: |
  #   cd /home/ubuntu/backend
  #   unzip dist.zip
  #   rm -rf dist.zip

# - name: "Install dependencies for project"
#   shell: |
#     cd /home/ubuntu/backend
#     npm install
# - name: "install npm packages"
#   become: true
#   command: npm install
#   args:
#     chdir: ~/backend
# - name: "compile npm packages"
#   become: true
#   command: npm run build
#   args:
#     chdir: ~/backend
# - name: "compile npm packages"
#   shell: |
#     cd /home/ubuntu/backend
#     npm run build

# - name: "start server"
#   become: true
#   command: pm2 start npm -- run start
#   args:
#     chdir: ~/backend/dist

- name: "Start PM2"
  shell: |
    cd /home/ubuntu/backend
    ls
    pm2 start npm --name backend -- run start:prod

# - name: "Start backend with pm2"
#   become: true
#   command: |
#     cd ~/backend && pm2 start npm --name backend -- start

# - name: "print message"
#   debug:
#     msg: "{{ execute_node.stdout_lines }}"
